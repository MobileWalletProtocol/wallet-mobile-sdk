name: Tag & Deploy [auto]

on:
  push:
    branches:
      - master
      - test-rn-and-flutter

jobs:
  # authorize:
  #   name: Authorize
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ${{ github.actor }} permission check to update release version
  #       uses: "lannonbr/repo-permission-check-action@2.0.2"
  #       with:
  #         permission: "write"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # autotag:
  #   name: Auto Tag
  #   needs: authorize
  #   runs-on: ubuntu-latest
  #   outputs:
  #     tagcreated: ${{ steps.autotag.outputs.tagcreated }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - id: autotag
  #       uses: ButlerLogic/action-autotag@1.1.1
  #       with:
  #         strategy: regex
  #         root: "CoinbaseWalletSDK.podspec"
  #         regex_pattern: "s.version\\s*=\\s*'(\\d+\\.\\d+\\.\\d+)'"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # deploy_ios:
  #   name: Deploy iOS SDK
  #   needs: autotag
  #   if: ${{ needs.autotag.outputs.tagcreated == 'yes' }}
  #   runs-on: macOS-latest
  #   steps: 
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.7.5'
  #         bundler-cache: true
      
  #     - name: Deploy to Cocoapods
  #       run: |
  #         set -eo pipefail
  #         pod trunk push CoinbaseWalletSDK.podspec --allow-warnings
  #       env:
  #         COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

  # deploy_android:
  #   name: Deploy Android SDK
  #   needs: autotag
  #   if: ${{ needs.autotag.outputs.tagcreated == 'yes' }}
  #   runs-on: macOS-latest
  #   defaults:
  #     run:
  #       working-directory: android
  #   steps: 
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: temurin
  #         java-version: 11
      
  #     - name: Setup Gradle
  #       uses: gradle/gradle-build-action@v2
    
  #     - name: Execute Gradle build
  #       run: ./gradlew publishReleasePublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository
  #       env:
  #         SIGNING_KEY_ID: ${{ secrets.ANDROID_SIGNING_KEYID }}
  #         SIGNING_PASSWORD: ${{ secrets.ANDROID_SIGNING_PASSWORD }}
  #         SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
  #         OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  #         OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  #         SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

  # deploy_rn:
  #   name: Deploy React Native SDK
  #   needs: [deploy_ios, deploy_android]
  #   runs-on: macOS-latest
  #   defaults:
  #     run:
  #       working-directory: react-native
  #   steps: 
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16.x'
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Publish to npm
  #       run: |
  #         npm install
  #         npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}

  deploy_flutter:
    name: Deploy Flutter SDK
    # needs: [deploy_ios, deploy_android]
    runs-on: macOS-latest
    defaults:
      run:
        working-directory: flutter
    env:
      DART_PATH: ~/Library/Application\ Support/dart
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1.3

      - name: Authenticate
        run: |
          mkdir -p $PUB_CACHE
          cd $PUB_CACHE
          echo "$PUBDEV_CREDENTIALSJSON" > credentials.json
        env:
          PUBDEV_CREDENTIALSJSON: ${{ secrets.PUBDEV_CREDENTIALSJSON }}

      - name: Publish to pub.dev
        run: dart pub publish --force

      - name: Clean up
        run: rm -r $DART_PATH
        # uses: sakebook/actions-flutter-pub-publisher@v1.4.1
        # with:
        #   package_directory: flutter
        #   flutter_package: true
        #   credential: ${{ secrets.PUBDEV_CREDENTIALSJSON }}
        #   dry_run: true

